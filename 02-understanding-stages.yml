
trigger:
- main

pool:
  #  name: Test Agent
  vmImage: "ubuntu-latest"

stages:
- stage: Build
  jobs:
  - job: FirstJob
    steps:
    - script: echo build FirstJob\
    - script: echo $(pipelineLevelVariable)
    - script: echo $(Build.BuildNumber)
    - script: echo $(Build.BuildId)
    - script: echo $(Build.SourceBranchName)
    - script: echo $(Build.SourceDirectory)
    - script: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R "$(System.DefaultWorkingDirectory)"
    - script: echo $(Build.ArtifactStagingDirectory)
    - script: java --version
    - bash:  ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
#   - job: SecondJob
#     steps:
#     - script: echo Build SecondJob
# - stage: DevDeploy
#   variables:
#     environment: Dev
#   dependsOn: Build
#   jobs:
#   - job: DevDeployJob
#     steps:
#     - script: echo $(environment)DeployJob
# - stage: QADeploy
#   dependsOn: Build
#   jobs:
#     - job: QADeployJob
#       steps:
#       - script: echo $(environment)DeployJob
# - stage: ProdDeploy
#   dependsOn:
#   - DevDeploy
#   - QADeploy
#   jobs:
#     - job: ProdDeployJob
#       steps:
#       - script: echo ProdDeployJob


#in this we have only one job otherwise we can run multiple jobs we must add stages

